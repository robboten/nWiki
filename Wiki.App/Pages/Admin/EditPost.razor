@page "/editpost/{Guid?}"
@layout AdminLayout

@using Wiki.App.Services;
@using TinyMCE.Blazor
@using Wiki.App.Shared.Layouts;

<h3>Admin Text</h3>

@* dropdown with available texts *@
<EditForm EditContext="editContext">
    <InputSelect @bind-Value=selectItemId class="form-control">
        @foreach (WikiPage wpage in wikiPages)
        {
            <option value="@wpage.Guid">@wpage.Name</option>
        }
    </InputSelect>
</EditForm>

@* edit component for selected item *@
<EditText selectedItem="selectedItem"></EditText>

@code {
    [Parameter]
    public string? Guid { get; set; }

    private IEnumerable<WikiPage> wikiPages = new List<WikiPage>();
    private WikiPage selectedItem = new WikiPage();
    private string selectItemId = string.Empty;

    [Inject]
    public IWikiClient wikiClient { get; set; } = default!;

    //editcontext
    private EditContext editContext = default!;


    protected override void OnInitialized()
    {
        editContext = new EditContext(selectedItem);
        editContext.OnFieldChanged += EditContext_OnFieldChanged;
    }

    private void EditContext_OnFieldChanged(object sender, FieldChangedEventArgs e)
    {
        var getSel = wikiPages.FirstOrDefault(p => p.Guid.ToString().Equals(selectItemId));
        if (getSel != null)
            selectedItem = getSel;
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        wikiPages = await wikiClient.GetPostsAsync();

        if (!string.IsNullOrEmpty(Guid))
        {
            selectedItem = wikiPages.FirstOrDefault(p => p.Guid.ToString().Equals(Guid));
            
        }
        if (String.IsNullOrEmpty(selectedItem.Name))
        {
            selectedItem = wikiPages.FirstOrDefault();
        }
        
    }
}
