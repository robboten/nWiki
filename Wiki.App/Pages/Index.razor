@page "/"
@using Wiki.App.Services;
@*@inject NavigationManager MyNavigationManager*@

<PageTitle>Wiki - @Page</PageTitle>
<div class="container">
    <div class="row">
        <div class="col-8 pe-4">
            @markupString
        </div>
        <div class="col  ms-4">
            <CharacterCards Characters="characters"></CharacterCards>
        </div>
    </div>  
    @*<div class="row">
    <div class="col">
    <CharacterCards Characters="characters"></CharacterCards>
    </div>
    </div>*@
</div>

@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public string Page { get; set; } = string.Empty;

    private IEnumerable<WikiPage> pages = new List<WikiPage>();
    private IEnumerable<Character> characters = new List<Character>();

    private WikiPage? currentPage = new WikiPage();
    private MarkupString markupString;

    [Inject]
    public IWikiClient wikiClient { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        pages = await wikiClient.GetPostsAsync();
        characters = await wikiClient.GetCharactersAsync();

        if(pages==null || characters == null)
        {
            throw new ArgumentNullException();
        }
    }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
        GetCurrentPage();

    }

    private void GetCurrentPage()
    {
        Page = string.IsNullOrEmpty(Page)
        ? "home"
        : Page;

        currentPage = pages?.FirstOrDefault(p => p.Name.ToLower() == Page.ToLower());

        if (currentPage == null)
            throw new ArgumentNullException(nameof(currentPage));

        var html = currentPage.Content;
        markupString = (MarkupString)html; // or new MarkupString(html)
    }
}
