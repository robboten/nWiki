@using Wiki.App.Services;
@using TinyMCE.Blazor

<h3>Add Character</h3>
<div class="row">
    <div class="col">
        <div class="input-group mb-3">
            <EditForm EditContext="editContext" OnValidSubmit="OnAddCharacter">
                <DataAnnotationsValidator />
                <ValidationSummary />
                    <input type="hidden" @bind-value="Character.Id" id="id" />
                <div class="input-group mb-3">
                    <span class="input-group-text" id="label-name">Name:</span>
                    <InputText @bind-Value="Character.Name" class="form-control" id="name" placeholder="Name"></InputText>
                </div>
                <div class="input-group mb-3">
                    <span class="input-group-text" id="label-bd">Birthdate:</span>
                    <InputDate @bind-Value="Character.Birthday" class="form-control" id="birthday"></InputDate>
                </div>
                @*<InputText @bind-Value="Character.Status" class="form-control" id="status" placeholder="Status"></InputText>*@
                <div class="input-group mb-3">
                    <span class="input-group-text" id="label-status">Status:</span>
                    <InputSelect class="form-select" @bind-Value="Character.Status">
                        <option value="Alive">Alive</option>
                        <option value="Dead">Dead</option>
                        <option value="Unknown">Unknown</option>
                    </InputSelect>
                </div>
                <div class="input-group mb-3">
                    <span class="input-group-text" id="label-bd">Quote:</span>
                    <InputTextArea @bind-Value="Character.Quote" class="form-control" id="quote" placeholder="Quote"></InputTextArea>
                </div>
                <div class="input-group mb-3">
                    <span class="input-group-text" id="label-portraiturl">Portrait url:</span>
                    <InputText @bind-Value="Character.PortraitUrl" class="form-control" id="portraitUrl" placeholder="https://"></InputText>
                </div>
                <div class="input-group mb-3">
                    <Editor ApiKey="@_apikey" Conf="@_conf" Field="() => Character.Text" @bind-Value="Character.Text" />
                </div>
                <button type="submit" id="addItemBtn" class="btn btn-primary">Save</button>

            </EditForm>
        </div>
    </div>
</div>
@code {
    [Inject]
    public IWikiClient wikiClient { get; set; } = default!;

    [Parameter]
    public EventCallback<Character> AddCharacter { get; set; }

    [Parameter]
    public Character? Character { get; set; }

    private EditContext editContext = default!;

    protected override void OnInitialized()
    {
        if (Character == null)
            Character = new Character();

        editContext = new EditContext(Character);
        Character.Birthday = DateTime.Now.AddYears(-20);
    }

    public async Task OnAddCharacter()
    {
        await AddCharacter.InvokeAsync(Character);
    }

    public async Task OnSave()
    {
        if (Character is null)
        {
            throw new ArgumentNullException(nameof(Character));
        }
        var item = await wikiClient.PutAsync(Character);
    }

    //tinymce
    private readonly string _apikey = "no-api-key";
    private Dictionary<string, object> _conf = new Dictionary<string, object> {
     { "toolbar", "undo redo | a11ycheck casechange blocks | bold italic forecolor backcolor | link | alignleft aligncenter alignright alignjustify | bullist numlist checklist outdent indent | removeformat | code"},
     { "plugins", "advlist lists link image anchor code"},

   };
}
